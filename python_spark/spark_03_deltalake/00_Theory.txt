Lakehouse:
    Bronze: 
        from landing zone read the new data and append them in the bronze table with all columns as string and merge the schema
        attach the audit column insert data

        into original schema
        all fields as string
        no transformations
        immutable data
        incremental reads from source
    
    Silver:
        clean
        enrich
        correct data types
        truncate load/ overwrite
        
    
    Gold
        aggregations



Symlink Manifest: 
            When we update delta table is creating new files and mark the previous files as old version
            In order to get the state of the table as a specific version (or the latest) and read it from other services (aws athena) we
            create the symlink file 
            its a file that contains the files of delta table that stores the current state of the data (to get the latest state of the table)

            df = DeltaTable.forName(spark, "table_name") # get reference to the table
            df.generate("symlink_format_manifest")


Create surrogate keys for dimensions:
    use python function uuid.uuid4()    
    register it as a udf
    generate the column


SCD2:

    1. On the new data dataframe create the below columns:
            uuid: surrogate key
            iscurrent: 1
            effective_time: now
            historic_recrd_expiry_date: now-1second
            historic_recrd_iscurrent: 0
            historic_recrd_updated_time: now


    2. Merge new data df with existing dimension on key and iscurrent
         When match update the table rows with historic_recrd_ columns of the df
    3. Append new data dataframe to table


Spark-submit:

    /spark/bin/spark-submit --master local[8] spark_code.py param1 param2 > logs_execution.log




Both in pyspark and in SparkSQL: https://docs.delta.io/latest/delta-batch.html

    Create managed/unmanaged table
    Read table
    Write to table
    Merge table
    Schema evolution

    vaccum
    optimize
    history/version
    GetReference to table
    
